.symbol
 fp 30
 sp 29
 retval 28
 rads 27
.code 0
 mov fp #3500
 mov sp #3000
 jal rads main
 trap r0 #0
; fun main pv 0
:main
; gnAsg :(#1 (call input ))
; gnAsg :(#1 (call input ))
st r1 @1 fp
st r2 @2 fp
st r3 @3 fp
add fp fp #4
st rads @0 fp
mov r2 #0
trap r2 #15
trap r0 #4
mov r1 r28
jmp L102
:L103
mov r3 #0
ld r2 +r1 r3
trap r2 #2
trap r0 #4
mov r1 r28
:L102
mov r3 #0
ld r2 +r1 r3
gt r3 r2 #0
jt r3 L103
:L101
ld rads @0 fp
sub fp fp #4
ld r3 @3 fp
ld r2 @2 fp
ld r1 @1 fp
ret rads
.data 200
.end
