                        .symbol
                         fp 30
                         sp 29
                         retval 28
                         rads 27
                         data 1100
                         maxdata 1120
                        .code 0
   0 L 5 30 3500         mov fp #3500
   1 L 5 29 3000         mov sp #3000
   2 L 7 27 100          jal rads main
   3 X 31 0 0 0 20       trap r0 #0
                        ; fun init pv 0
                        :init
                        ; gnAsg :(#1 0 )
                        ; gnAsg :((vec data #1 )(- maxdata #1 ))
   4 D 4 1 30 1         st r1 @1 fp
   5 D 4 2 30 2         st r2 @2 fp
   6 D 4 3 30 3         st r3 @3 fp
   7 D 10 30 30 4       add fp fp #4
   8 D 4 27 30 0        st rads @0 fp
   9 L 5 1 0            mov r1 #0
  10 L 6 0 15           jmp L102
                        :L103
  11 L 1 2 1120         ld r2 maxdata
  12 X 31 3 2 1 1       sub r3 r2 r1
  13 D 4 3 1 1100       st r3 @data r1
  14 D 10 1 1 1         add r1 r1 #1
                        :L102
  15 L 1 3 1120         ld r3 maxdata
  16 X 31 2 1 3 9       lt r2 r1 r3
  17 L 8 2 11           jt r2 L103
                        :L101
  18 D 2 27 30 0        ld rads @0 fp
  19 D 11 30 30 4       sub fp fp #4
  20 D 2 3 30 3         ld r3 @3 fp
  21 D 2 2 30 2         ld r2 @2 fp
  22 D 2 1 30 1         ld r1 @1 fp
  23 X 31 27 0 0 19     ret rads
                        ; fun show pv 0
                        :show
                        ; gnAsg :(#1 0 )
  24 D 4 1 30 1         st r1 @1 fp
  25 D 4 2 30 2         st r2 @2 fp
  26 D 4 3 30 3         st r3 @3 fp
  27 D 10 30 30 4       add fp fp #4
  28 D 4 27 30 0        st rads @0 fp
  29 L 5 1 0            mov r1 #0
  30 L 6 0 34           jmp L105
                        :L106
  31 D 2 2 1 1100       ld r2 @data r1
  32 X 31 2 1 0 20      trap r2 #1
  33 D 10 1 1 1         add r1 r1 #1
                        :L105
  34 L 1 3 1120         ld r3 maxdata
  35 X 31 2 1 3 9       lt r2 r1 r3
  36 L 8 2 31           jt r2 L106
                        :L104
  37 D 2 27 30 0        ld rads @0 fp
  38 D 11 30 30 4       sub fp fp #4
  39 D 2 3 30 3         ld r3 @3 fp
  40 D 2 2 30 2         ld r2 @2 fp
  41 D 2 1 30 1         ld r1 @1 fp
  42 X 31 27 0 0 19     ret rads
                        ; fun swapx pv 2
                        :swapx
                        ; gnAsg :(#3 (vec data #1 ))
                        ; gnAsg :((vec data #1 )(vec data #2 ))
                        ; gnAsg :((vec data #2 )#3 )
  43 D 4 1 30 1         st r1 @1 fp
  44 D 4 2 30 2         st r2 @2 fp
  45 D 4 3 30 3         st r3 @3 fp
  46 D 4 4 30 4         st r4 @4 fp
  47 D 10 30 30 5       add fp fp #5
  48 D 4 27 30 0        st rads @0 fp
  49 X 31 29 2 0 22     pop sp r2
  50 X 31 29 1 0 22     pop sp r1
  51 D 2 4 1 1100       ld r4 @data r1
  52 X 31 3 4 0 16      mov r3 r4
  53 D 2 4 2 1100       ld r4 @data r2
  54 D 4 4 1 1100       st r4 @data r1
  55 D 4 3 2 1100       st r3 @data r2
                        :L107
  56 D 2 27 30 0        ld rads @0 fp
  57 D 11 30 30 5       sub fp fp #5
  58 D 2 4 30 4         ld r4 @4 fp
  59 D 2 3 30 3         ld r3 @3 fp
  60 D 2 2 30 2         ld r2 @2 fp
  61 D 2 1 30 1         ld r1 @1 fp
  62 X 31 27 0 0 19     ret rads
                        ; fun sort pv 0
                        :sort
                        ; gnAsg :(#1 0 )
                        ; gnAsg :(#2 0 )
  63 D 4 1 30 1         st r1 @1 fp
  64 D 4 2 30 2         st r2 @2 fp
  65 D 4 3 30 3         st r3 @3 fp
  66 D 4 4 30 4         st r4 @4 fp
  67 D 4 5 30 5         st r5 @5 fp
  68 D 10 30 30 6       add fp fp #6
  69 D 4 27 30 0        st rads @0 fp
  70 L 5 1 0            mov r1 #0
  71 L 6 0 89           jmp L109
                        :L110
  72 L 5 2 0            mov r2 #0
  73 L 6 0 84           jmp L111
                        :L112
  74 D 10 4 2 1         add r4 r2 #1
  75 D 2 3 4 1100       ld r3 @data r4
  76 D 2 5 2 1100       ld r5 @data r2
  77 X 31 4 3 5 9       lt r4 r3 r5
  78 L 9 4 83           jf r4 L113
  79 X 31 29 2 0 21     push sp r2
  80 D 10 3 2 1         add r3 r2 #1
  81 X 31 29 3 0 21     push sp r3
  82 L 7 27 43          jal rads swapx
                        :L113
  83 D 10 2 2 1         add r2 r2 #1
                        :L111
  84 L 1 4 1120         ld r4 maxdata
  85 D 11 5 4 1         sub r5 r4 #1
  86 X 31 3 2 5 9       lt r3 r2 r5
  87 L 8 3 74           jt r3 L112
  88 D 10 1 1 1         add r1 r1 #1
                        :L109
  89 L 1 4 1120         ld r4 maxdata
  90 X 31 3 1 4 9       lt r3 r1 r4
  91 L 8 3 72           jt r3 L110
                        :L108
  92 D 2 27 30 0        ld rads @0 fp
  93 D 11 30 30 6       sub fp fp #6
  94 D 2 5 30 5         ld r5 @5 fp
  95 D 2 4 30 4         ld r4 @4 fp
  96 D 2 3 30 3         ld r3 @3 fp
  97 D 2 2 30 2         ld r2 @2 fp
  98 D 2 1 30 1         ld r1 @1 fp
  99 X 31 27 0 0 19     ret rads
                        ; fun main pv 0
                        :main
                        ; gnAsg :(maxdata 20 )
 100 D 4 1 30 1         st r1 @1 fp
 101 D 10 30 30 2       add fp fp #2
 102 D 4 27 30 0        st rads @0 fp
 103 L 5 1 20           mov r1 #20
 104 L 3 1 1120         st r1 maxdata
 105 L 7 27 4           jal rads init
 106 L 7 27 24          jal rads show
 107 L 7 27 63          jal rads sort
 108 L 7 27 24          jal rads show
                        :L114
 109 D 2 27 30 0        ld rads @0 fp
 110 D 11 30 30 2       sub fp fp #2
 111 D 2 1 30 1         ld r1 @1 fp
 112 X 31 27 0 0 19     ret rads
                        .data 200
                        .end
