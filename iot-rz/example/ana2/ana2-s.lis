                        .symbol
                         fp 30
                         sp 29
                         retval 28
                         rads 27
                         lastx 1100
                         ecount 1101
                         cnt1 1102
                         cnt2 1103
                         t1 1104
                        .code 0
   0 L 5 30 3500         mov fp #3500
   1 L 5 29 3000         mov sp #3000
   2 L 7 27 49           jal rads main
   3 X 31 0 0 0 20       trap r0 #0
                        ; fun checktime pv 1
                        :checktime
                        ; gnAsg :(cnt2 ecount )
                        ; gnAsg :(cnt1 cnt2 )
                        ; gnAsg :(t1 #1 )
   4 D 4 1 30 1         st r1 @1 fp
   5 D 4 2 30 2         st r2 @2 fp
   6 D 4 3 30 3         st r3 @3 fp
   7 D 4 4 30 4         st r4 @4 fp
   8 D 10 30 30 5       add fp fp #5
   9 D 4 27 30 0        st rads @0 fp
  10 X 31 29 1 0 22     pop sp r1
  11 L 1 2 1101         ld r2 ecount
  12 L 3 2 1103         st r2 cnt2
  13 L 1 2 1103         ld r2 cnt2
  14 L 1 4 1102         ld r4 cnt1
  15 X 31 3 2 4 1       sub r3 r2 r4
  16 X 31 3 1 0 20      trap r3 #1
  17 L 1 2 1103         ld r2 cnt2
  18 L 3 2 1102         st r2 cnt1
  19 L 3 1 1104         st r1 t1
                        :L101
  20 D 2 27 30 0        ld rads @0 fp
  21 D 11 30 30 5       sub fp fp #5
  22 D 2 4 30 4         ld r4 @4 fp
  23 D 2 3 30 3         ld r3 @3 fp
  24 D 2 2 30 2         ld r2 @2 fp
  25 D 2 1 30 1         ld r1 @1 fp
  26 X 31 27 0 0 19     ret rads
                        ; fun int0 pv 0
                        :int0
                        ; gnAsg :(#1 (call readport 11 ))
                        ; gnAsg :(ecount (+ ecount 1 ))
                        ; gnAsg :(lastx #1 )
                        ; gnAsg :(#2 (call readport 13 ))
  27 L 5 3 11           mov r3 #11
  28 X 31 3 18 0 20     trap r3 #18
  29 X 31 1 28 0 16     mov r1 r28
  30 L 1 4 1100         ld r4 lastx
  31 X 31 3 1 4 8       ne r3 r1 r4
  32 L 9 3 38           jf r3 L103
  33 D 17 3 1 5         eq r3 r1 #5
  34 L 9 3 38           jf r3 L104
  35 L 1 3 1101         ld r3 ecount
  36 D 10 4 3 1         add r4 r3 #1
  37 L 3 4 1101         st r4 ecount
                        :L104
                        :L103
  38 L 3 1 1100         st r1 lastx
  39 L 5 3 13           mov r3 #13
  40 X 31 3 18 0 20     trap r3 #18
  41 X 31 2 28 0 16     mov r2 r28
  42 L 1 4 1104         ld r4 t1
  43 D 10 5 4 4000      add r5 r4 #4000
  44 X 31 3 2 5 11      gt r3 r2 r5
  45 L 9 3 48           jf r3 L105
  46 X 31 29 2 0 21     push sp r2
  47 L 7 27 4           jal rads checktime
                        :L105
                        :L102
  48 X 31 0 0 0 25      reti
                        ; fun main pv 0
                        :main
                        ; gnAsg :(lastx (call readport 11 ))
                        ; gnAsg :(ecount 0 )
                        ; gnAsg :(t1 0 )
                        ; gnAsg :(cnt1 0 )
  49 D 4 1 30 1         st r1 @1 fp
  50 D 10 30 30 2       add fp fp #2
  51 D 4 27 30 0        st rads @0 fp
  52 L 5 1 27           mov r1 #int0
  53 L 3 1 1000         st r1 1000
  54 L 5 1 200          mov r1 #200
  55 X 31 1 13 0 20     trap r1 #13
  56 L 5 1 11           mov r1 #11
  57 X 31 1 18 0 20     trap r1 #18
  58 L 3 28 1100        st r28 lastx
  59 L 5 1 0            mov r1 #0
  60 L 3 1 1101         st r1 ecount
  61 L 5 1 0            mov r1 #0
  62 L 3 1 1104         st r1 t1
  63 L 5 1 0            mov r1 #0
  64 L 3 1 1102         st r1 cnt1
  65 L 6 0 67           jmp L107
                        :L108
  66 X 31 0 0 0 29      swi
                        :L107
  67 L 5 1 1            mov r1 #1
  68 L 8 1 66           jt r1 L108
                        :L106
  69 D 2 27 30 0        ld rads @0 fp
  70 D 11 30 30 2       sub fp fp #2
  71 D 2 1 30 1         ld r1 @1 fp
  72 X 31 27 0 0 19     ret rads
                        .data 200
                        .end
